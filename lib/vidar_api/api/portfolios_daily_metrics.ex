# NOTE: This file is auto generated by OpenAPI Generator 7.12.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule VidarAPI.Api.PortfoliosDailyMetrics do
  @moduledoc """
  API calls for all endpoints tagged `PortfoliosDailyMetrics`.
  """

  alias VidarAPI.Connection
  import VidarAPI.RequestBuilder

  @doc """
  Get portfolio daily metrics by id
  This endpoint uses OData. All operators are supported.    To make it as fast as possible please select the smallest required data set.    Examples:    Selecting data set: /PortfoliosDailyMetrics/{key}?$select=id  

  ### Parameters

  - `connection` (VidarAPI.Connection): Connection to server
  - `key` (integer()): Portfolio daily metrics unique id
  - `opts` (keyword): Optional parameters
    - `:select` (String.t): Limits the properties returned in the result.
    - `:expand` (String.t): Indicates the related entities to be represented inline. The maximum depth is 2.

  ### Returns

  - `{:ok, VidarAPI.Model.PortfolioDailyMetricsODataResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_portfolio_daily_metrics(Tesla.Env.client(), integer(), keyword()) ::
          {:ok, nil}
          | {:ok, VidarAPI.Model.PortfolioDailyMetricsODataResponse.t()}
          | {:error, Tesla.Env.t()}
  def get_portfolio_daily_metrics(connection, key, opts \\ []) do
    optional_params = %{
      :select => :query,
      :expand => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/v1/PortfoliosDailyMetrics/#{key}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, VidarAPI.Model.PortfolioDailyMetricsODataResponse},
      {404, false}
    ])
  end

  @doc """
  Get all portfolios daily metrics
  This endpoint uses OData. All operators are supported.    To make it as fast as possible please select the smallest required data set.    Examples:    Selecting data set: /PortfoliosDailyMetrics?$select=id, statementDate    Filtering data set: /PortfoliosDailyMetrics?$filter=id eq 12

  ### Parameters

  - `connection` (VidarAPI.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:select` (String.t): Limits the properties returned in the result.
    - `:expand` (String.t): Indicates the related entities to be represented inline. The maximum depth is 2.
    - `:filter` (String.t): Filter the results using OData syntax.
    - `:orderby` (String.t): Order the results using OData syntax.
    - `:top` (integer()): Maximum number of results to return.
    - `:skip` (integer()): Number of results to skip.
    - `:count` (boolean()): Whether to include a count of results.

  ### Returns

  - `{:ok, VidarAPI.Model.PortfolioDailyMetricsODataCollectionResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_portfolio_daily_metricss(Tesla.Env.client(), keyword()) ::
          {:ok, VidarAPI.Model.PortfolioDailyMetricsODataCollectionResponse.t()}
          | {:error, Tesla.Env.t()}
  def get_portfolio_daily_metricss(connection, opts \\ []) do
    optional_params = %{
      :select => :query,
      :expand => :query,
      :filter => :query,
      :orderby => :query,
      :top => :query,
      :skip => :query,
      :count => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/v1/PortfoliosDailyMetrics")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, VidarAPI.Model.PortfolioDailyMetricsODataCollectionResponse}
    ])
  end
end
