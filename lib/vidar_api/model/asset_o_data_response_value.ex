# NOTE: This file is auto generated by OpenAPI Generator 7.12.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule VidarAPI.Model.AssetODataResponseValue do
  @moduledoc """
  Entity representing asset
  """

  @derive Jason.Encoder
  defstruct [
    :id,
    :name,
    :currency,
    :assetClass,
    :assetSubClass,
    :investmentType,
    :description,
    :quotationFactor,
    :interestRate,
    :maturityDate,
    :riskScore,
    :iban,
    :isin,
    :valor,
    :region,
    :country,
    :sector,
    :industryGroup,
    :industry,
    :subIndustry,
    :instrumentInfo,
    :wkn,
    :cusip,
    :sedol,
    :ric,
    :figi,
    :optionType,
    :underlyingInstrument,
    :underlyingInstrumentIsin,
    :strikePrice,
    :multiplier,
    :instrumentIssuer,
    :suitabilityScore,
    :appropriatenessScore,
    :priceSourceForManualPortfolio
  ]

  @type t :: %__MODULE__{
    :id => integer() | nil,
    :name => String.t | nil,
    :currency => String.t | nil,
    :assetClass => String.t | nil,
    :assetSubClass => String.t | nil,
    :investmentType => String.t | nil,
    :description => String.t | nil,
    :quotationFactor => float() | nil,
    :interestRate => float() | nil,
    :maturityDate => Date.t | nil,
    :riskScore => integer() | nil,
    :iban => String.t | nil,
    :isin => String.t | nil,
    :valor => String.t | nil,
    :region => String.t | nil,
    :country => String.t | nil,
    :sector => String.t | nil,
    :industryGroup => String.t | nil,
    :industry => String.t | nil,
    :subIndustry => String.t | nil,
    :instrumentInfo => String.t | nil,
    :wkn => String.t | nil,
    :cusip => String.t | nil,
    :sedol => String.t | nil,
    :ric => String.t | nil,
    :figi => String.t | nil,
    :optionType => String.t | nil,
    :underlyingInstrument => String.t | nil,
    :underlyingInstrumentIsin => String.t | nil,
    :strikePrice => float() | nil,
    :multiplier => float() | nil,
    :instrumentIssuer => String.t | nil,
    :suitabilityScore => integer() | nil,
    :appropriatenessScore => integer() | nil,
    :priceSourceForManualPortfolio => String.t | nil
  }

  alias VidarAPI.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:maturityDate, :date, nil)
  end
end

